name: Decrypt and Push to Private Repository

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'The branch to push the decrypted file to'
        required: true
        default: 'main'

jobs:
  decrypt_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Public Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}

      - name: Import GPG private key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Create directory for decrypted files
        run: mkdir -p decrypted-files

      - name: Decrypt Files Recursively (Exclude README.md)
        run: |
          find data/ -type f ! -name 'README.md' | while read -r file; do
            echo "Processing: $file"
            relative_path="${file#data/}"
            output_dir="decrypted-files/$(dirname "$relative_path")"
            mkdir -p "$output_dir"

            if gpg --quiet --batch --yes --pinentry-mode loopback --passphrase "${{ secrets.GPG_PASSPHRASE }}"
              --decrypt --output "$output_dir/$(basename "$file").json" "$file"; then
              echo "Decrypted successfully: $file"
            else
              echo "Skipping non-GPG file: $file"
            fi
          done
        shell: bash

      - name: Debug Decrypted Files
        run: ls -laR decrypted-files/

      - name: Set formatted date
        run: echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Checkout Private Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.PRIVATE_REPO_URL }}
          ref: main
          token: ${{ secrets.CONFIG_PRIVATE_REPO_TOKEN }}
          path: private-repo

      - name: Commit decrypted file to private repo
        run: |
          ls -la
          cp -r decrypted-files/* private-repo/data
          ls -la private-repo/data
          ls -la decrypted-files
          cd private-repo
          git add *
          git commit -m "Add decrypted file ${{ env.DATE }}"
          git push origin main
